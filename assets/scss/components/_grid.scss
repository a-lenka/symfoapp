html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    display: flex;
    min-height: 100vh;
    flex-direction: column;

    // Animation for page loading
    transition: all 1s ease-in-out;
    animation: body-opacity-change .15s ease-in-out .15s forwards;
    opacity: 0;
}

main {
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: auto;

    &.container {
        margin: 0 auto;
        max-width: 1280px;
        width: 90%;
    }
}

.col2-flex-layout {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
}

.left-flex-column,
.right-flex-column {
    width: 80%;
    margin: 20px 40px;

    & .themes-preview {
        width: 100%;
    }
}

@media #{$medium-and-up} {
    // 2 col 1 row flex layout
    .col2-flex-layout {
        display: flex;
        flex-direction: row;
    }

    .left-flex-column,
    .right-flex-column {
        width: 40%;
        margin: 10rem auto;
    }
}

// Footer
.page-footer {
    padding-top: 20px;
    color: $footer-font-color;
    background-color: $footer-bg-color;

    .footer-copyright {
        overflow: hidden;
        min-height: 50px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 0;
        color: $footer-copyright-font-color;
        background-color: $footer-copyright-bg-color;
    }
}

@media #{$medium-and-up} {
    .container {
        width: 85%;
    }
}

@media #{$large-and-up} {
    .container {
        width: 70%;
    }
}

.col .row {
    margin-left: (-1 * $gutter-width / 2);
    margin-right: (-1 * $gutter-width / 2);
}

.section {
    padding-top: 1rem;
    padding-bottom: 1rem;

    &.no-pad {
        padding: 0;
    }

    &.no-pad-bot {
        padding-bottom: 0;
    }

    &.no-pad-top {
        padding-top: 0;
    }
}


// Mixins to eliminate code repitition
@mixin reset-offset {
    margin-left: auto;
    left: auto;
    right: auto;
}

@mixin grid-classes($size, $i, $perc) {
    &.offset-#{$size}#{$i} {
        margin-left: $perc;
    }

    &.pull-#{$size}#{$i} {
        right: $perc;
    }

    &.push-#{$size}#{$i} {
        left: $perc;
    }
}

.row {
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 20px;

    // Clear floating children
    &:after {
        content: "";
        display: table;
        clear: both;
    }

    .col {
        float: left;
        box-sizing: border-box;
        padding: 0 $gutter-width / 2;
        min-height: 1px;

        &[class*="push-"],
        &[class*="pull-"] {
            position: relative;
        }

        $i: 1;
        @while $i <= $num-cols {
            $perc: unquote((100 / ($num-cols / $i)) + "%");

            &.s#{$i} {
                width: $perc;
                @include reset-offset;
            }

            $i: $i + 1;
        }

        $i: 1;
        @while $i <= $num-cols {
            $perc: unquote((100 / ($num-cols / $i)) + "%");

            @include grid-classes("s", $i, $perc);

            $i: $i + 1;
        }

        @media #{$medium-and-up} {

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                &.m#{$i} {
                    width: $perc;
                    @include reset-offset;
                }

                $i: $i + 1
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                @include grid-classes("m", $i, $perc);

                $i: $i + 1;
            }
        }

        @media #{$large-and-up} {

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                &.l#{$i} {
                    width: $perc;
                    @include reset-offset;
                }

                $i: $i + 1;
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                @include grid-classes("l", $i, $perc);

                $i: $i + 1;
            }
        }

        @media #{$extra-large-and-up} {

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                &.xl#{$i} {
                    width: $perc;
                    @include reset-offset;
                }

                $i: $i + 1;
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");

                @include grid-classes("xl", $i, $perc);

                $i: $i + 1;
            }
        }
    }
}

@keyframes body-opacity-change {
    from { opacity: 0; }
    to   { opacity: 1; }
}
